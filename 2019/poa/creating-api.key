title: Uma API Responsa
author: Rafael Guterres Jeffman
date: 2019
theme: tchelinux

:coverpage

:bigtitle
# Você pode começar me agradecendo!

:bigtitle
# Você tem direito a um certificado do Tchelinux!

:bigtitle
# Você pode acessar os slides do Tchelinux!

:bigtitle
# O site do evento ficava pronto em 15 minutos! \\\\ \\normalsize{E eu não tenho culpa se desistiram de usar meus scripts.}

:bigtitle
# Então... começamos pelos agradecimentos!

:bigimage
[images/clap.jpg]

:bigtitle
# Mas então, qual é o problema?

:items+image
# Eu *odeio* trabalhar.
* E manter diversos *sistemas* só é melhor que _fazer tudo a mão_.
* E ser o "One Developer To Rule Them All", não escala.
* E ainda tem muita coisa automatizável no Tchelinux...
[images/code_monkey.jpg]

:items+image
# Eu *adoro* programar.
[images/too_easy.png]
* E aprender coisas novas.
* E resolver problemas.
* E poder dizer "ficou mais fácil"!

:items+image
# Limitações do Tchelinux
* Somos todos voluntários
* O mais caro é o tempo.
* Dinheiro é importante.
* Sim, já testamos vários sistemas.
[images/time.jpg]

:items+image
# O estado atual
[images/groo.jpg]
* Sistemas independentes /hackeados/ nas horas de folga durante 2-3 dias.
* /Flat file data (JSON)./
* Certificados com geração quase manual.
* Adição dos slides totalmente manual.
* Quase nada de estatísticas.
* Nada para os usuários.

:items+image
# Por que uma API?
* Escala
* Granularidade
* Integração de todos os sitemas
* Independência da UI
* Livrai-nos de todo PHP...
[images/elephant.jpg]

:bigtitle
# Design

:items+image
# Desafios Técnicos
[images/penguins.jpg]
* Sem investimento.
* Sem manutenção.
* Sem tempo de desenvolvimento.
* Quatro usuários diferentes.
* Uso em /bursts/, normalmente zero usuários.

:items
# Decisões inteligentes
* Automatizar o que for possível.
* 'Not built here' é uma vantagem.
* Participação de outros desenvolvedores.

:citation
# A necessidade é a mãe de todas as invenções.
-- Platão

:bigtitle
# Design

:items
# Serviços
* Gerenciamento de Eventos (dados, site, custos, spam)
* /Call for Papers/
* Inscrições
* Credenciamento
* Geração de Certificados
* Slides das Palestras

:items+image
# Usuários
[images/kbderror.jpg]
* Coordenação do Tchelinux
* Organizadores de Eventos
* Palestrantes
* Participantes

:items
# /User Stories/ com Gherkin
* É fácil.
* Documenta o que se deseja atingir.
* Descreve o comportamento esperado do ponto de vista do usuário.
* É texto com /syntax highlight/ e variáveis.

:items
# BDD com Behave
* Garante que o comportamento definido está funcionando.
* Exige definição no comportamento do usuário.
* Provê um exemplo de uso da API.
* Rápido para testar o caminho feliz.

:bigtitle
# Implementação

:items+image
# Decisões Autocráticas
* Python 3
* Flask
* SQLAlchemy e Alembic
* Flake8 e Pylint
* Pytest
* Não dá, mas eu queria o SQLite...
[images/dictator.jpg]

:items
# Por que Python 3?
* Porque tem bastante gente pra desenvolver.
* Porque está longe de ser ruim.
* Porque tem tudo que precisamos pronto e com qualidade.
* Porque ninguém deveria estar utilizando Python 2 há anos...

:items
# Flask
* Framework muito leve para a criação de aplicações WSGI.
* Diversos módulos que facilitam o trabalho:
    * \href{https:\/\/flask-restful.readthedocs.io\/en\/latest}{Flask-RESTful}
    * \href{https:\/\/pythonhosted.org\/Flask-JWT}{Flask-JWT} (JSON Web Token)
* Muita coisa disponível
    * \href{https:\/\/www.roytuts.com\/jwt-authentication-using-python-flask}{Securing REST API: JWT Authentication using Python Flask}
    * 2FA - \href{https:\/\/blog.miguelgrinberg.com\/post\/two-factor-authentication-with-flask}{Two Factor Authentication with Flask}

:bigtitle
# Bancos de Dados é algo tão bom quanto feriado no Domingo.

:items
# /Data Management/
* SQLAlchemy
    * ORM\/Framework para persistência em bancos de dados.
    * Ah... os objetos, os lindos objetos!
* Alembic
    * Migração de Dados
    * Implantação, atualização contínua.

:bigtitle
# Qualidade

:citation
# Todo teste de software detecta todos os problemas que foram excitados pelo teste e mais nenhum outro.
-- Eu mesmo.

:items
# Controle de Qualidade
* Apesar das limitações, não testar é muito pior.
* Pytest
    * Testes funcionais e unitários.
    * Ainda não foi tomada uma decisão final.
* Coverage

:items
# Qualidade do Código
* PEP8:
    * Flake8: Pode ser bem chato.
    * Pylint: Pode ser impossível de passar.
* Code Review

:items
# Code Review
* Realizado nos Pull Requests do Github.
* Utiliza as ferramentas do Github.
* O que verificar:
    * Consistência no código.
    * Simplicidade e facilidade de leitura.
    * Possíveis problemas de manutenção futura.

:bigtitle
# /Deployment/

:items
# Integração Contínua
* Travis-CI
    * Integra maravilhosamente bem com o Github.
    * Facílimo de utilizar.
    * Gratuito para projetos /open source/.
    * Gratuito, mas não é aberto.

:items
# Integração Contínua
* Jenkins
    * Integra bem com o Github.
    * Requer o uso de um servidor e de configuração trabalhosa.
    * /Open source/.

:items
# Integração Contínua
* Hoje, rodamos todos os testes no desenvolvimento e os mesmos testes em CI.
* Com o aumento da demanda, a ideia é executar apenas um subconjunto dos testes em desenvolvimento.
* Por simplicidade, e custo, hoje, utilizamos o Travis.
* No futuro, um pouco distante, é prevista uma migração para o Jenkins.

:items
# Disponibilidade da API
* O problema dos custos do Tchelinux
    * Falta braço
    * Falta tempo
    * Falta dinheiro
* Apesar de querermos usar dados estátios ao máximo, a parte de gerenciamento dos eventos precisa ser dinâmica.

:bigtitle
# E ainda tem mais...

:items
# Gerenciamento do Projeto
* Github:
    * Issues
    * Projects
    * Milestones

:bigtitle
# Mas e por que tudo isso?

:items
# Lei Geral de Proteção \\\\ de Dados Pessoais
* A partir de Agosto de 2020 podem ser aplicadas sanções pela a LGPD
* Não vai nos mandar pra cadeia, mas...
* ... pode nos deixar na m... mais difícil situação.
* Até o nome de vocês a gente precisa proteger!

:citation
# As imagens dessa apresentação foram levianamente surrupiadas da Internê.
-- Os autores das imagens, por favor, me desculpem...

:items+image
# Muito Obrigado!
* \small{\url{mailto:rafasgj@gmail.com}}
* \small{Slides: \url{https:\/\/slides.tchelinux.org}}
* \small{Source Code:}\\\\\footnotesize{\url{https:\/\/github.com\/rafasgj\/tchelinux-code}}
* \small{Certificados: \url{https:\/\/certificados.tchelinux.org}}
[images/rafael.jpg]
